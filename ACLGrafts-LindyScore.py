# -*- coding: utf-8 -*-
"""ACLGrafts-LindyScore.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PJpezbdXn2A_PumcGXM-TR-nIpgTgNSP
"""

# Install pandas if not already installed
!pip install pandas

import pandas as pd

def fetch_latest_data():
    # Fetch data from sources (this is a placeholder for actual data fetching logic)
    data = {
        "graft_type": ["hamstring", "quadricep", "patellar", "achilles_allograft"],
        "introduced": [1990, 2000, 1980, 2010],
        "PRO": [85, 80, 90, 75],
        "lysholm_score": [90, 85, 95, 80],
        "LSI": [92, 88, 95, 85],
        "RTS": [80, 75, 85, 70],
        "long_term_success": [88, 85, 92, 80],
        "complications": [5, 7, 6, 10],
        "biomechanical_studies": [2500, 2400, 2600, 2300],
        "citation_count": [150, 120, 200, 100]
    }
    return pd.DataFrame(data)

def update_data_file():
    latest_data = fetch_latest_data()
    latest_data.to_csv('graft_data.csv', index=False)

# Update data file with the latest data
update_data_file()

import datetime
import pandas as pd

# Function to calculate Lindy scores
def calculate_lindy_scores(graft_data):
    current_year = datetime.datetime.now().year

    def lindy_score(graft):
        age = current_year - graft["introduced"]
        clinical_assessment = (graft["PRO"] + graft["lysholm_score"] + graft["LSI"]) / 3
        success_metrics = (graft["RTS"] + graft["long_term_success"]) / 2
        complication_factor = 1 / (1 + graft["complications"])
        biomechanical_factor = graft["biomechanical_studies"] / 1000
        citation_factor = graft["citation_count"] / 100

        score = (age * clinical_assessment * success_metrics * complication_factor *
                 biomechanical_factor * citation_factor)
        return score

    scores = {key: lindy_score(value) for key, value in graft_data.items()}
    return scores

# Read data from CSV
graft_data_df = pd.read_csv('graft_data.csv')

# Convert DataFrame to dictionary
graft_data = graft_data_df.set_index('graft_type').T.to_dict()

# Calculate scores
scores = calculate_lindy_scores(graft_data)

# Display results
for graft, score in scores.items():
    print(f"The Lindy score for {graft} graft is: {score:.2f}")

